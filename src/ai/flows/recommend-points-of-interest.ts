// This file is generated by Firebase Genkit.
'use server';

/**
 * @fileOverview This file defines a Genkit flow for recommending points of interest to tourists in Ilorin.
 *
 * The flow takes a user's location as input and returns a list of recommended points of interest with descriptions.
 *
 * @exports `recommendPointsOfInterest` - The main function to trigger the flow.
 * @exports `RecommendPointsOfInterestInput` - The input type for the `recommendPointsOfInterest` function.
 * @exports `RecommendPointsOfInterestOutput` - The output type for the `recommendPointsOfInterest` function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

/**
 * Input schema for the recommendPointsOfInterest flow.
 */
const RecommendPointsOfInterestInputSchema = z.object({
  location: z
    .string()
    .describe('The current location of the user (e.g., a street address or landmark in Ilorin).'),
});

/**
 * Type definition for the input to the recommendPointsOfInterest flow.
 */
export type RecommendPointsOfInterestInput = z.infer<
  typeof RecommendPointsOfInterestInputSchema
>;

/**
 * Output schema for the recommendPointsOfInterest flow.
 */
const RecommendPointsOfInterestOutputSchema = z.array(z.object({
  name: z.string().describe('The name of the point of interest.'),
  description: z.string().describe('A brief description of the point of interest.'),
  rating: z.number().optional().describe('The average rating of the point of interest (if available).'),
  address: z.string().optional().describe('The address of the point of interest.'),
}));

/**
 * Type definition for the output of the recommendPointsOfInterest flow.
 */
export type RecommendPointsOfInterestOutput = z.infer<
  typeof RecommendPointsOfInterestOutputSchema
>;

/**
 * Main function to trigger the recommendPointsOfInterest flow.
 * @param input - The input object containing the user's location.
 * @returns A promise that resolves to the recommended points of interest.
 */
export async function recommendPointsOfInterest(
  input: RecommendPointsOfInterestInput
): Promise<RecommendPointsOfInterestOutput> {
  return recommendPointsOfInterestFlow(input);
}

/**
 * Prompt definition for the recommendPointsOfInterest flow.
 */
const recommendPointsOfInterestPrompt = ai.definePrompt({
  name: 'recommendPointsOfInterestPrompt',
  input: {schema: RecommendPointsOfInterestInputSchema},
  output: {schema: RecommendPointsOfInterestOutputSchema},
  prompt: `You are a helpful tour guide for tourists visiting Ilorin, Nigeria. Based on the tourist's current location, recommend a few interesting places to visit nearby.

Consider factors such as historical significance, cultural attractions, restaurants, and hotels.
Provide a brief description of each place, and if available, include its rating and address.

Location of tourist: {{{location}}}`,
});

/**
 * Flow definition for recommending points of interest.
 */
const recommendPointsOfInterestFlow = ai.defineFlow(
  {
    name: 'recommendPointsOfInterestFlow',
    inputSchema: RecommendPointsOfInterestInputSchema,
    outputSchema: RecommendPointsOfInterestOutputSchema,
  },
  async input => {
    const {output} = await recommendPointsOfInterestPrompt(input);
    return output!;
  }
);
